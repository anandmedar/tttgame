{"version":3,"sources":["helpers.js","components/Square.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","value","onClick","borderRadius","width","height","margin","display","gridTemplate","Board","squares","map","square","i","styles","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","timeInHistory","slice","current","_step","move","destination","step","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qMAoBA,IClBMA,EAAQ,CACVC,WAAY,YACZC,OAAQ,qBACRC,SAAU,OACVC,WAAW,MACXC,OAAQ,UACRC,QAAS,QASEC,EANA,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,QAAT,OACX,wBAAQT,MAAOA,EAAOS,QAASA,EAA/B,SACKD,KCVHR,EAAQ,CACVE,OAAQ,qBACRQ,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAWHC,EARD,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASR,EAAX,EAAWA,QAAX,OACV,qBAAKT,MAAOA,EAAZ,SACKiB,EAAQC,KAAI,SAACC,EAAOC,GAAR,OACT,cAAC,EAAD,CAAgBZ,MAAOW,EAAQV,QAAS,kBAAMA,EAAQW,KAAzCA,SCZnBC,EAAS,CACXV,MAAO,QACPE,OAAQ,aAgDGS,EA7CF,WAAO,IAAD,EAEeC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAFvC,mBAERC,EAFQ,KAECC,EAFD,OAGqBJ,mBAAS,GAH9B,mBAGRK,EAHQ,KAGIC,EAHJ,OAIeN,oBAAS,GAJxB,mBAIRO,EAJQ,KAICC,EAJD,KAKTC,EHdH,SAAyBf,GAW5B,IAVA,IAAMgB,EAAQ,CACV,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEDb,EAAE,EAAGA,EAAEa,EAAMC,OAAQd,IAAI,CAAC,IAAD,cACba,EAAMb,GADO,GACtBe,EADsB,KACpBC,EADoB,KAClBC,EADkB,KAE7B,GAAGpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACjE,OAAOpB,EAAQkB,GAGvB,OAAO,KGHQG,CAAgBZ,EAAQE,IA6BvC,OACI,qCACI,cAAC,EAAD,CAAOX,QAASS,EAAQE,GAAanB,QA7BzB,SAAAW,GAChB,IAAMmB,EAAgBb,EAAQc,MAAM,EAAGZ,EAAa,GAC9Ca,EAAUF,EAAcX,GACxBX,EAAO,YAAOwB,GACjBT,GAAUf,EAAQG,KACrBH,EAAQG,GAAKU,EAAU,IAAM,IAC7BH,EAAW,GAAD,mBAAKY,GAAL,CAAoBtB,KAC9BY,EAAcU,EAAcL,QAC5BH,GAAYD,OAsBR,sBAAK9B,MAAOqB,EAAZ,UACI,4BAAIW,EAAQ,WAAYA,EAAS,iBAAmBF,EAAU,IAAM,OAd5EJ,EAAQR,KAAI,SAACwB,EAAOC,GAChB,IAAMC,EAAcD,EAAI,qBAAiBA,GAAS,cAClD,OACI,6BACI,wBAAQlC,QAAS,kBAT7BoB,EADWgB,EAU+BF,QAR1CZ,EAAWc,EAAO,IAAM,GAFb,IAAAA,GAUC,SAAsCD,KADjCD,aC/BVG,EAFH,kBAAM,cAAC,EAAD,KCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.625c8cae.chunk.js","sourcesContent":["export function calculateWinner(squares) {\n    const lines = [\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [8,4,6],\n        [1,4,7],\n        [2,5,8],\n        [8,4,8],\n        [2,4,6]\n    ];\n    for(let i=0; i<lines.length; i++){\n        const [a,b,c] = lines[i];\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nconst squares = [\n    null, null, null,\n    'X', 'X', 'X',\n    null, null, null\n];","import React from 'react';\n\nconst style = {\n    background: 'lightblue',\n    border: '2px solid darkblue',\n    fontSize: '30px',\n    fontWeight:'800',\n    cursor: 'pointer',\n    outline: 'none'\n}\n\nconst Square = ({value, onClick}) => (\n    <button style={style} onClick={onClick}>\n        {value}\n    </button>\n)\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\nconst style = {\n    border: '4px solid darkblue',\n    borderRadius: '10px',\n    width: '250px',\n    height: '250px',\n    margin: '0 auto',\n    display: 'grid',\n    gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\n}\n\nconst Board = ({squares, onClick}) => (\n    <div style={style}>\n        {squares.map((square,i) => (\n            <Square key={i} value={square} onClick={() => onClick(i)} />\n        ))}\n    </div>\n)\n\nexport default Board;\n","import React, {useState} from 'react';\nimport {calculateWinner} from '../helpers';\nimport Board from './Board';\n\nconst styles = {\n    width: '200px',\n    margin: '20px auto'\n}\n\nconst Game = () => {\n\n    const [history, setHistory] = useState([Array(9).fill(null)]);\n    const [stepNumber, setStepNumber] = useState(0);\n    const [xIsNext, setXisNext] = useState(true);\n    const winner = calculateWinner(history[stepNumber]);\n\n    const handleClick = i => {\n        const timeInHistory = history.slice(0, stepNumber + 1);\n        const current = timeInHistory[stepNumber];\n        const squares = [...current];\n        if(winner || squares[i]) return;\n        squares[i] = xIsNext ? 'X' : 'O';\n        setHistory([...timeInHistory, squares]);\n        setStepNumber(timeInHistory.length);\n        setXisNext(!xIsNext);\n    }\n\n    const jumpTo = step => {\n        setStepNumber(step);\n        setXisNext(step % 2 === 0)\n    };\n\n    const renderMoves = () => (\n        history.map((_step, move) => {\n            const destination = move ? `Go to move#${move}` : 'Go to Start';\n            return (\n                <li key={move}>\n                    <button onClick={() => jumpTo(move)}>{destination}</button>\n                </li>\n            )\n        })\n    )\n\n    return (\n        <>\n            <Board squares={history[stepNumber]} onClick={handleClick} />\n            <div style={styles}>\n                <p>{winner? 'Winner: ' +winner : 'Next Player: ' + (xIsNext ? 'X' : 'O')}</p>\n                {renderMoves()}\n            </div>\n        </>\n    )\n}\n\nexport default Game;","import React from 'react';\nimport Game from './components/Game';\n\nconst App = () => <Game />;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}