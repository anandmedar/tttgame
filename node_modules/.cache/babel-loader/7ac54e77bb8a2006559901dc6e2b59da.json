{"ast":null,"code":"import _slicedToArray from\"/home/anand/Local/Reactjs/tic-tac-toe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";export function calculateWinner(squares){var lines=[[0,1,2],[3,4,5],[6,7,8],[8,4,6],[1,4,7],[2,5,8],[8,4,8],[2,4,6]];for(var i=0;i<lines.length;i++){var _lines$i=_slicedToArray(lines[i],3),a=_lines$i[0],b=_lines$i[1],c=_lines$i[2];if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){return squares[a];}}return null;}var squares=[null,null,null,'X','X','X',null,null,null];","map":{"version":3,"sources":["/home/anand/Local/Reactjs/tic-tac-toe/src/helpers.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c"],"mappings":"4JAAA,MAAO,SAASA,CAAAA,eAAT,CAAyBC,OAAzB,CAAkC,CACrC,GAAMC,CAAAA,KAAK,CAAG,CACV,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CADU,CAEV,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAFU,CAGV,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAHU,CAIV,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAJU,CAKV,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CALU,CAMV,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CANU,CAOV,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAPU,CAQV,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CARU,CAAd,CAUA,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAaA,CAAC,CAACD,KAAK,CAACE,MAArB,CAA6BD,CAAC,EAA9B,CAAiC,6BACbD,KAAK,CAACC,CAAD,CADQ,IACtBE,CADsB,aACpBC,CADoB,aAClBC,CADkB,aAE7B,GAAGN,OAAO,CAACI,CAAD,CAAP,EAAcJ,OAAO,CAACI,CAAD,CAAP,GAAeJ,OAAO,CAACK,CAAD,CAApC,EAA2CL,OAAO,CAACI,CAAD,CAAP,GAAeJ,OAAO,CAACM,CAAD,CAApE,CAAwE,CACpE,MAAON,CAAAA,OAAO,CAACI,CAAD,CAAd,CACH,CACJ,CACD,MAAO,KAAP,CACH,CAED,GAAMJ,CAAAA,OAAO,CAAG,CACZ,IADY,CACN,IADM,CACA,IADA,CAEZ,GAFY,CAEP,GAFO,CAEF,GAFE,CAGZ,IAHY,CAGN,IAHM,CAGA,IAHA,CAAhB","sourcesContent":["export function calculateWinner(squares) {\n    const lines = [\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [8,4,6],\n        [1,4,7],\n        [2,5,8],\n        [8,4,8],\n        [2,4,6]\n    ];\n    for(let i=0; i<lines.length; i++){\n        const [a,b,c] = lines[i];\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nconst squares = [\n    null, null, null,\n    'X', 'X', 'X',\n    null, null, null\n];"]},"metadata":{},"sourceType":"module"}