{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/anand/Local/Reactjs/tic-tac-toe/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { calculateWinner } from '../helpers';\nimport Board from './Board';\nconst styles = {\n  width: '200px',\n  margin: '20px auto'\n};\n\nconst Game = () => {\n  _s();\n\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(board);\n\n  const handleClick = i => {\n    const timeInHistory = history.slice(0, stepNumber + 1);\n    const current = timeInHistory[stepNumber];\n    const squares = [...current];\n    if (winner || boardCopy[i]) return;\n    boardCopy[i] = xIsNext ? 'X' : 'O';\n    setHistory([...timeInHistory, squares]);\n    setStepNumber(timeInHistory.length);\n    setXisNext(!xIsNext);\n  };\n\n  const jumpTo = () => {};\n\n  const renderMoves = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => setBoard(Array(9).fill(null)),\n    children: \"Start Game\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      squares: board,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [winner ? 'Winner: ' + winner : 'Next Player: ' + (xIsNext ? 'X' : 'O'), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), renderMoves()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Game, \"jdOUhnoG+TC5U2pEL9BHRoVpe6E=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/anand/Local/Reactjs/tic-tac-toe/src/components/Game.js"],"names":["React","useState","calculateWinner","Board","styles","width","margin","Game","board","setBoard","Array","fill","stepNumber","setStepNumber","xIsNext","setXisNext","winner","handleClick","i","timeInHistory","history","slice","current","squares","boardCopy","setHistory","length","jumpTo","renderMoves"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,eAAR,QAA8B,YAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE,OADI;AAEXC,EAAAA,MAAM,EAAE;AAFG,CAAf;;AAKA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACS,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMe,MAAM,GAAGd,eAAe,CAACM,KAAD,CAA9B;;AAEA,QAAMS,WAAW,GAAGC,CAAC,IAAI;AACrB,UAAMC,aAAa,GAAGC,OAAO,CAACC,KAAR,CAAc,CAAd,EAAiBT,UAAU,GAAG,CAA9B,CAAtB;AACA,UAAMU,OAAO,GAAGH,aAAa,CAACP,UAAD,CAA7B;AACA,UAAMW,OAAO,GAAG,CAAC,GAAGD,OAAJ,CAAhB;AACA,QAAGN,MAAM,IAAIQ,SAAS,CAACN,CAAD,CAAtB,EAA2B;AAC3BM,IAAAA,SAAS,CAACN,CAAD,CAAT,GAAeJ,OAAO,GAAG,GAAH,GAAS,GAA/B;AACAW,IAAAA,UAAU,CAAC,CAAC,GAAGN,aAAJ,EAAmBI,OAAnB,CAAD,CAAV;AACAV,IAAAA,aAAa,CAACM,aAAa,CAACO,MAAf,CAAb;AACAX,IAAAA,UAAU,CAAE,CAACD,OAAH,CAAV;AACH,GATD;;AAWA,QAAMa,MAAM,GAAG,MAAM,CAEpB,CAFD;;AAIA,QAAMC,WAAW,GAAG,mBAChB;AAAQ,IAAA,OAAO,EAAE,MAAMnB,QAAQ,CAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAMA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEH,KAAhB;AAAuB,MAAA,OAAO,EAAES;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAEb,MAAZ;AAAA,8BACI;AAAA,mBAAIY,MAAM,GAAE,aAAYA,MAAd,GAAuB,mBAAkBF,OAAO,GAAG,GAAH,GAAS,GAAlC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKc,WAAW,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AASH,CArCD;;GAAMrB,I;;KAAAA,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\nimport {calculateWinner} from '../helpers';\nimport Board from './Board';\n\nconst styles = {\n    width: '200px',\n    margin: '20px auto'\n}\n\nconst Game = () => {\n\n    const [board, setBoard] = useState(Array(9).fill(null));\n    const [stepNumber, setStepNumber] = useState(0);\n    const [xIsNext, setXisNext] = useState(true);\n    const winner = calculateWinner(board);\n\n    const handleClick = i => {\n        const timeInHistory = history.slice(0, stepNumber + 1);\n        const current = timeInHistory[stepNumber];\n        const squares = [...current];\n        if(winner || boardCopy[i]) return;\n        boardCopy[i] = xIsNext ? 'X' : 'O';\n        setHistory([...timeInHistory, squares]);\n        setStepNumber(timeInHistory.length);\n        setXisNext( !xIsNext);\n    }\n\n    const jumpTo = () => {\n\n    }\n\n    const renderMoves = () => (\n        <button onClick={() => setBoard(Array(9).fill(null))}>\n            Start Game\n        </button>\n    )\n\n    return(\n        <>\n            <Board squares={board} onClick={handleClick} />\n            <div style={styles}>\n                <p>{winner? 'Winner: ' +winner : 'Next Player: ' +(xIsNext ? 'X' : 'O')} </p>\n                {renderMoves()}\n            </div>\n        </>\n    )\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}